# coding: utf-8

"""
    Marketing Emails

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v3
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from hubspot.marketing.emails.configuration import Configuration


class PublicEmailStyleSettings(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        "email_body_padding": "str",
        "color_picker_favorite5": "str",
        "body_color": "str",
        "color_picker_favorite6": "str",
        "background_image": "str",
        "email_body_width": "str",
        "secondary_font": "str",
        "primary_accent_color": "str",
        "color_picker_favorite3": "str",
        "primary_font_line_height": "str",
        "color_picker_favorite4": "str",
        "secondary_font_color": "str",
        "color_picker_favorite1": "str",
        "color_picker_favorite2": "str",
        "body_border_color": "str",
        "body_border_width": "int",
        "links_font": "PublicFontStyle",
        "background_color": "str",
        "background_image_type": "str",
        "divider_style_settings": "PublicDividerStyleSettings",
        "secondary_accent_color": "str",
        "secondary_font_line_height": "str",
        "primary_font_size": "int",
        "secondary_font_size": "int",
        "primary_font_color": "str",
        "heading_one_font": "PublicFontStyle",
        "primary_font": "str",
        "heading_two_font": "PublicFontStyle",
        "button_style_settings": "PublicButtonStyleSettings",
        "body_border_color_choice": "str",
    }

    attribute_map = {
        "email_body_padding": "emailBodyPadding",
        "color_picker_favorite5": "colorPickerFavorite5",
        "body_color": "bodyColor",
        "color_picker_favorite6": "colorPickerFavorite6",
        "background_image": "backgroundImage",
        "email_body_width": "emailBodyWidth",
        "secondary_font": "secondaryFont",
        "primary_accent_color": "primaryAccentColor",
        "color_picker_favorite3": "colorPickerFavorite3",
        "primary_font_line_height": "primaryFontLineHeight",
        "color_picker_favorite4": "colorPickerFavorite4",
        "secondary_font_color": "secondaryFontColor",
        "color_picker_favorite1": "colorPickerFavorite1",
        "color_picker_favorite2": "colorPickerFavorite2",
        "body_border_color": "bodyBorderColor",
        "body_border_width": "bodyBorderWidth",
        "links_font": "linksFont",
        "background_color": "backgroundColor",
        "background_image_type": "backgroundImageType",
        "divider_style_settings": "dividerStyleSettings",
        "secondary_accent_color": "secondaryAccentColor",
        "secondary_font_line_height": "secondaryFontLineHeight",
        "primary_font_size": "primaryFontSize",
        "secondary_font_size": "secondaryFontSize",
        "primary_font_color": "primaryFontColor",
        "heading_one_font": "headingOneFont",
        "primary_font": "primaryFont",
        "heading_two_font": "headingTwoFont",
        "button_style_settings": "buttonStyleSettings",
        "body_border_color_choice": "bodyBorderColorChoice",
    }

    def __init__(
        self,
        email_body_padding=None,
        color_picker_favorite5=None,
        body_color=None,
        color_picker_favorite6=None,
        background_image=None,
        email_body_width=None,
        secondary_font=None,
        primary_accent_color=None,
        color_picker_favorite3=None,
        primary_font_line_height=None,
        color_picker_favorite4=None,
        secondary_font_color=None,
        color_picker_favorite1=None,
        color_picker_favorite2=None,
        body_border_color=None,
        body_border_width=None,
        links_font=None,
        background_color=None,
        background_image_type=None,
        divider_style_settings=None,
        secondary_accent_color=None,
        secondary_font_line_height=None,
        primary_font_size=None,
        secondary_font_size=None,
        primary_font_color=None,
        heading_one_font=None,
        primary_font=None,
        heading_two_font=None,
        button_style_settings=None,
        body_border_color_choice=None,
        local_vars_configuration=None,
    ):  # noqa: E501
        """PublicEmailStyleSettings - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._email_body_padding = None
        self._color_picker_favorite5 = None
        self._body_color = None
        self._color_picker_favorite6 = None
        self._background_image = None
        self._email_body_width = None
        self._secondary_font = None
        self._primary_accent_color = None
        self._color_picker_favorite3 = None
        self._primary_font_line_height = None
        self._color_picker_favorite4 = None
        self._secondary_font_color = None
        self._color_picker_favorite1 = None
        self._color_picker_favorite2 = None
        self._body_border_color = None
        self._body_border_width = None
        self._links_font = None
        self._background_color = None
        self._background_image_type = None
        self._divider_style_settings = None
        self._secondary_accent_color = None
        self._secondary_font_line_height = None
        self._primary_font_size = None
        self._secondary_font_size = None
        self._primary_font_color = None
        self._heading_one_font = None
        self._primary_font = None
        self._heading_two_font = None
        self._button_style_settings = None
        self._body_border_color_choice = None
        self.discriminator = None

        if email_body_padding is not None:
            self.email_body_padding = email_body_padding
        if color_picker_favorite5 is not None:
            self.color_picker_favorite5 = color_picker_favorite5
        if body_color is not None:
            self.body_color = body_color
        if color_picker_favorite6 is not None:
            self.color_picker_favorite6 = color_picker_favorite6
        if background_image is not None:
            self.background_image = background_image
        if email_body_width is not None:
            self.email_body_width = email_body_width
        if secondary_font is not None:
            self.secondary_font = secondary_font
        if primary_accent_color is not None:
            self.primary_accent_color = primary_accent_color
        if color_picker_favorite3 is not None:
            self.color_picker_favorite3 = color_picker_favorite3
        if primary_font_line_height is not None:
            self.primary_font_line_height = primary_font_line_height
        if color_picker_favorite4 is not None:
            self.color_picker_favorite4 = color_picker_favorite4
        if secondary_font_color is not None:
            self.secondary_font_color = secondary_font_color
        if color_picker_favorite1 is not None:
            self.color_picker_favorite1 = color_picker_favorite1
        if color_picker_favorite2 is not None:
            self.color_picker_favorite2 = color_picker_favorite2
        if body_border_color is not None:
            self.body_border_color = body_border_color
        if body_border_width is not None:
            self.body_border_width = body_border_width
        if links_font is not None:
            self.links_font = links_font
        if background_color is not None:
            self.background_color = background_color
        if background_image_type is not None:
            self.background_image_type = background_image_type
        if divider_style_settings is not None:
            self.divider_style_settings = divider_style_settings
        if secondary_accent_color is not None:
            self.secondary_accent_color = secondary_accent_color
        if secondary_font_line_height is not None:
            self.secondary_font_line_height = secondary_font_line_height
        if primary_font_size is not None:
            self.primary_font_size = primary_font_size
        if secondary_font_size is not None:
            self.secondary_font_size = secondary_font_size
        if primary_font_color is not None:
            self.primary_font_color = primary_font_color
        if heading_one_font is not None:
            self.heading_one_font = heading_one_font
        if primary_font is not None:
            self.primary_font = primary_font
        if heading_two_font is not None:
            self.heading_two_font = heading_two_font
        if button_style_settings is not None:
            self.button_style_settings = button_style_settings
        if body_border_color_choice is not None:
            self.body_border_color_choice = body_border_color_choice

    @property
    def email_body_padding(self):
        """Gets the email_body_padding of this PublicEmailStyleSettings.  # noqa: E501


        :return: The email_body_padding of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._email_body_padding

    @email_body_padding.setter
    def email_body_padding(self, email_body_padding):
        """Sets the email_body_padding of this PublicEmailStyleSettings.


        :param email_body_padding: The email_body_padding of this PublicEmailStyleSettings.  # noqa: E501
        :type email_body_padding: str
        """

        self._email_body_padding = email_body_padding

    @property
    def color_picker_favorite5(self):
        """Gets the color_picker_favorite5 of this PublicEmailStyleSettings.  # noqa: E501


        :return: The color_picker_favorite5 of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._color_picker_favorite5

    @color_picker_favorite5.setter
    def color_picker_favorite5(self, color_picker_favorite5):
        """Sets the color_picker_favorite5 of this PublicEmailStyleSettings.


        :param color_picker_favorite5: The color_picker_favorite5 of this PublicEmailStyleSettings.  # noqa: E501
        :type color_picker_favorite5: str
        """

        self._color_picker_favorite5 = color_picker_favorite5

    @property
    def body_color(self):
        """Gets the body_color of this PublicEmailStyleSettings.  # noqa: E501


        :return: The body_color of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._body_color

    @body_color.setter
    def body_color(self, body_color):
        """Sets the body_color of this PublicEmailStyleSettings.


        :param body_color: The body_color of this PublicEmailStyleSettings.  # noqa: E501
        :type body_color: str
        """

        self._body_color = body_color

    @property
    def color_picker_favorite6(self):
        """Gets the color_picker_favorite6 of this PublicEmailStyleSettings.  # noqa: E501


        :return: The color_picker_favorite6 of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._color_picker_favorite6

    @color_picker_favorite6.setter
    def color_picker_favorite6(self, color_picker_favorite6):
        """Sets the color_picker_favorite6 of this PublicEmailStyleSettings.


        :param color_picker_favorite6: The color_picker_favorite6 of this PublicEmailStyleSettings.  # noqa: E501
        :type color_picker_favorite6: str
        """

        self._color_picker_favorite6 = color_picker_favorite6

    @property
    def background_image(self):
        """Gets the background_image of this PublicEmailStyleSettings.  # noqa: E501


        :return: The background_image of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._background_image

    @background_image.setter
    def background_image(self, background_image):
        """Sets the background_image of this PublicEmailStyleSettings.


        :param background_image: The background_image of this PublicEmailStyleSettings.  # noqa: E501
        :type background_image: str
        """

        self._background_image = background_image

    @property
    def email_body_width(self):
        """Gets the email_body_width of this PublicEmailStyleSettings.  # noqa: E501


        :return: The email_body_width of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._email_body_width

    @email_body_width.setter
    def email_body_width(self, email_body_width):
        """Sets the email_body_width of this PublicEmailStyleSettings.


        :param email_body_width: The email_body_width of this PublicEmailStyleSettings.  # noqa: E501
        :type email_body_width: str
        """

        self._email_body_width = email_body_width

    @property
    def secondary_font(self):
        """Gets the secondary_font of this PublicEmailStyleSettings.  # noqa: E501


        :return: The secondary_font of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._secondary_font

    @secondary_font.setter
    def secondary_font(self, secondary_font):
        """Sets the secondary_font of this PublicEmailStyleSettings.


        :param secondary_font: The secondary_font of this PublicEmailStyleSettings.  # noqa: E501
        :type secondary_font: str
        """

        self._secondary_font = secondary_font

    @property
    def primary_accent_color(self):
        """Gets the primary_accent_color of this PublicEmailStyleSettings.  # noqa: E501


        :return: The primary_accent_color of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._primary_accent_color

    @primary_accent_color.setter
    def primary_accent_color(self, primary_accent_color):
        """Sets the primary_accent_color of this PublicEmailStyleSettings.


        :param primary_accent_color: The primary_accent_color of this PublicEmailStyleSettings.  # noqa: E501
        :type primary_accent_color: str
        """

        self._primary_accent_color = primary_accent_color

    @property
    def color_picker_favorite3(self):
        """Gets the color_picker_favorite3 of this PublicEmailStyleSettings.  # noqa: E501


        :return: The color_picker_favorite3 of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._color_picker_favorite3

    @color_picker_favorite3.setter
    def color_picker_favorite3(self, color_picker_favorite3):
        """Sets the color_picker_favorite3 of this PublicEmailStyleSettings.


        :param color_picker_favorite3: The color_picker_favorite3 of this PublicEmailStyleSettings.  # noqa: E501
        :type color_picker_favorite3: str
        """

        self._color_picker_favorite3 = color_picker_favorite3

    @property
    def primary_font_line_height(self):
        """Gets the primary_font_line_height of this PublicEmailStyleSettings.  # noqa: E501


        :return: The primary_font_line_height of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._primary_font_line_height

    @primary_font_line_height.setter
    def primary_font_line_height(self, primary_font_line_height):
        """Sets the primary_font_line_height of this PublicEmailStyleSettings.


        :param primary_font_line_height: The primary_font_line_height of this PublicEmailStyleSettings.  # noqa: E501
        :type primary_font_line_height: str
        """

        self._primary_font_line_height = primary_font_line_height

    @property
    def color_picker_favorite4(self):
        """Gets the color_picker_favorite4 of this PublicEmailStyleSettings.  # noqa: E501


        :return: The color_picker_favorite4 of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._color_picker_favorite4

    @color_picker_favorite4.setter
    def color_picker_favorite4(self, color_picker_favorite4):
        """Sets the color_picker_favorite4 of this PublicEmailStyleSettings.


        :param color_picker_favorite4: The color_picker_favorite4 of this PublicEmailStyleSettings.  # noqa: E501
        :type color_picker_favorite4: str
        """

        self._color_picker_favorite4 = color_picker_favorite4

    @property
    def secondary_font_color(self):
        """Gets the secondary_font_color of this PublicEmailStyleSettings.  # noqa: E501


        :return: The secondary_font_color of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._secondary_font_color

    @secondary_font_color.setter
    def secondary_font_color(self, secondary_font_color):
        """Sets the secondary_font_color of this PublicEmailStyleSettings.


        :param secondary_font_color: The secondary_font_color of this PublicEmailStyleSettings.  # noqa: E501
        :type secondary_font_color: str
        """

        self._secondary_font_color = secondary_font_color

    @property
    def color_picker_favorite1(self):
        """Gets the color_picker_favorite1 of this PublicEmailStyleSettings.  # noqa: E501


        :return: The color_picker_favorite1 of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._color_picker_favorite1

    @color_picker_favorite1.setter
    def color_picker_favorite1(self, color_picker_favorite1):
        """Sets the color_picker_favorite1 of this PublicEmailStyleSettings.


        :param color_picker_favorite1: The color_picker_favorite1 of this PublicEmailStyleSettings.  # noqa: E501
        :type color_picker_favorite1: str
        """

        self._color_picker_favorite1 = color_picker_favorite1

    @property
    def color_picker_favorite2(self):
        """Gets the color_picker_favorite2 of this PublicEmailStyleSettings.  # noqa: E501


        :return: The color_picker_favorite2 of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._color_picker_favorite2

    @color_picker_favorite2.setter
    def color_picker_favorite2(self, color_picker_favorite2):
        """Sets the color_picker_favorite2 of this PublicEmailStyleSettings.


        :param color_picker_favorite2: The color_picker_favorite2 of this PublicEmailStyleSettings.  # noqa: E501
        :type color_picker_favorite2: str
        """

        self._color_picker_favorite2 = color_picker_favorite2

    @property
    def body_border_color(self):
        """Gets the body_border_color of this PublicEmailStyleSettings.  # noqa: E501


        :return: The body_border_color of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._body_border_color

    @body_border_color.setter
    def body_border_color(self, body_border_color):
        """Sets the body_border_color of this PublicEmailStyleSettings.


        :param body_border_color: The body_border_color of this PublicEmailStyleSettings.  # noqa: E501
        :type body_border_color: str
        """

        self._body_border_color = body_border_color

    @property
    def body_border_width(self):
        """Gets the body_border_width of this PublicEmailStyleSettings.  # noqa: E501


        :return: The body_border_width of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: int
        """
        return self._body_border_width

    @body_border_width.setter
    def body_border_width(self, body_border_width):
        """Sets the body_border_width of this PublicEmailStyleSettings.


        :param body_border_width: The body_border_width of this PublicEmailStyleSettings.  # noqa: E501
        :type body_border_width: int
        """

        self._body_border_width = body_border_width

    @property
    def links_font(self):
        """Gets the links_font of this PublicEmailStyleSettings.  # noqa: E501


        :return: The links_font of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: PublicFontStyle
        """
        return self._links_font

    @links_font.setter
    def links_font(self, links_font):
        """Sets the links_font of this PublicEmailStyleSettings.


        :param links_font: The links_font of this PublicEmailStyleSettings.  # noqa: E501
        :type links_font: PublicFontStyle
        """

        self._links_font = links_font

    @property
    def background_color(self):
        """Gets the background_color of this PublicEmailStyleSettings.  # noqa: E501


        :return: The background_color of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._background_color

    @background_color.setter
    def background_color(self, background_color):
        """Sets the background_color of this PublicEmailStyleSettings.


        :param background_color: The background_color of this PublicEmailStyleSettings.  # noqa: E501
        :type background_color: str
        """

        self._background_color = background_color

    @property
    def background_image_type(self):
        """Gets the background_image_type of this PublicEmailStyleSettings.  # noqa: E501


        :return: The background_image_type of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._background_image_type

    @background_image_type.setter
    def background_image_type(self, background_image_type):
        """Sets the background_image_type of this PublicEmailStyleSettings.


        :param background_image_type: The background_image_type of this PublicEmailStyleSettings.  # noqa: E501
        :type background_image_type: str
        """

        self._background_image_type = background_image_type

    @property
    def divider_style_settings(self):
        """Gets the divider_style_settings of this PublicEmailStyleSettings.  # noqa: E501


        :return: The divider_style_settings of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: PublicDividerStyleSettings
        """
        return self._divider_style_settings

    @divider_style_settings.setter
    def divider_style_settings(self, divider_style_settings):
        """Sets the divider_style_settings of this PublicEmailStyleSettings.


        :param divider_style_settings: The divider_style_settings of this PublicEmailStyleSettings.  # noqa: E501
        :type divider_style_settings: PublicDividerStyleSettings
        """

        self._divider_style_settings = divider_style_settings

    @property
    def secondary_accent_color(self):
        """Gets the secondary_accent_color of this PublicEmailStyleSettings.  # noqa: E501


        :return: The secondary_accent_color of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._secondary_accent_color

    @secondary_accent_color.setter
    def secondary_accent_color(self, secondary_accent_color):
        """Sets the secondary_accent_color of this PublicEmailStyleSettings.


        :param secondary_accent_color: The secondary_accent_color of this PublicEmailStyleSettings.  # noqa: E501
        :type secondary_accent_color: str
        """

        self._secondary_accent_color = secondary_accent_color

    @property
    def secondary_font_line_height(self):
        """Gets the secondary_font_line_height of this PublicEmailStyleSettings.  # noqa: E501


        :return: The secondary_font_line_height of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._secondary_font_line_height

    @secondary_font_line_height.setter
    def secondary_font_line_height(self, secondary_font_line_height):
        """Sets the secondary_font_line_height of this PublicEmailStyleSettings.


        :param secondary_font_line_height: The secondary_font_line_height of this PublicEmailStyleSettings.  # noqa: E501
        :type secondary_font_line_height: str
        """

        self._secondary_font_line_height = secondary_font_line_height

    @property
    def primary_font_size(self):
        """Gets the primary_font_size of this PublicEmailStyleSettings.  # noqa: E501


        :return: The primary_font_size of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: int
        """
        return self._primary_font_size

    @primary_font_size.setter
    def primary_font_size(self, primary_font_size):
        """Sets the primary_font_size of this PublicEmailStyleSettings.


        :param primary_font_size: The primary_font_size of this PublicEmailStyleSettings.  # noqa: E501
        :type primary_font_size: int
        """

        self._primary_font_size = primary_font_size

    @property
    def secondary_font_size(self):
        """Gets the secondary_font_size of this PublicEmailStyleSettings.  # noqa: E501


        :return: The secondary_font_size of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: int
        """
        return self._secondary_font_size

    @secondary_font_size.setter
    def secondary_font_size(self, secondary_font_size):
        """Sets the secondary_font_size of this PublicEmailStyleSettings.


        :param secondary_font_size: The secondary_font_size of this PublicEmailStyleSettings.  # noqa: E501
        :type secondary_font_size: int
        """

        self._secondary_font_size = secondary_font_size

    @property
    def primary_font_color(self):
        """Gets the primary_font_color of this PublicEmailStyleSettings.  # noqa: E501


        :return: The primary_font_color of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._primary_font_color

    @primary_font_color.setter
    def primary_font_color(self, primary_font_color):
        """Sets the primary_font_color of this PublicEmailStyleSettings.


        :param primary_font_color: The primary_font_color of this PublicEmailStyleSettings.  # noqa: E501
        :type primary_font_color: str
        """

        self._primary_font_color = primary_font_color

    @property
    def heading_one_font(self):
        """Gets the heading_one_font of this PublicEmailStyleSettings.  # noqa: E501


        :return: The heading_one_font of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: PublicFontStyle
        """
        return self._heading_one_font

    @heading_one_font.setter
    def heading_one_font(self, heading_one_font):
        """Sets the heading_one_font of this PublicEmailStyleSettings.


        :param heading_one_font: The heading_one_font of this PublicEmailStyleSettings.  # noqa: E501
        :type heading_one_font: PublicFontStyle
        """

        self._heading_one_font = heading_one_font

    @property
    def primary_font(self):
        """Gets the primary_font of this PublicEmailStyleSettings.  # noqa: E501


        :return: The primary_font of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._primary_font

    @primary_font.setter
    def primary_font(self, primary_font):
        """Sets the primary_font of this PublicEmailStyleSettings.


        :param primary_font: The primary_font of this PublicEmailStyleSettings.  # noqa: E501
        :type primary_font: str
        """

        self._primary_font = primary_font

    @property
    def heading_two_font(self):
        """Gets the heading_two_font of this PublicEmailStyleSettings.  # noqa: E501


        :return: The heading_two_font of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: PublicFontStyle
        """
        return self._heading_two_font

    @heading_two_font.setter
    def heading_two_font(self, heading_two_font):
        """Sets the heading_two_font of this PublicEmailStyleSettings.


        :param heading_two_font: The heading_two_font of this PublicEmailStyleSettings.  # noqa: E501
        :type heading_two_font: PublicFontStyle
        """

        self._heading_two_font = heading_two_font

    @property
    def button_style_settings(self):
        """Gets the button_style_settings of this PublicEmailStyleSettings.  # noqa: E501


        :return: The button_style_settings of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: PublicButtonStyleSettings
        """
        return self._button_style_settings

    @button_style_settings.setter
    def button_style_settings(self, button_style_settings):
        """Sets the button_style_settings of this PublicEmailStyleSettings.


        :param button_style_settings: The button_style_settings of this PublicEmailStyleSettings.  # noqa: E501
        :type button_style_settings: PublicButtonStyleSettings
        """

        self._button_style_settings = button_style_settings

    @property
    def body_border_color_choice(self):
        """Gets the body_border_color_choice of this PublicEmailStyleSettings.  # noqa: E501


        :return: The body_border_color_choice of this PublicEmailStyleSettings.  # noqa: E501
        :rtype: str
        """
        return self._body_border_color_choice

    @body_border_color_choice.setter
    def body_border_color_choice(self, body_border_color_choice):
        """Sets the body_border_color_choice of this PublicEmailStyleSettings.


        :param body_border_color_choice: The body_border_color_choice of this PublicEmailStyleSettings.  # noqa: E501
        :type body_border_color_choice: str
        """

        self._body_border_color_choice = body_border_color_choice

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(lambda x: convert(x), value))
            elif isinstance(value, dict):
                result[attr] = dict(map(lambda item: (item[0], convert(item[1])), value.items()))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PublicEmailStyleSettings):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, PublicEmailStyleSettings):
            return True

        return self.to_dict() != other.to_dict()
